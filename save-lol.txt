'use client';

import { useSession } from 'next-auth/react';
import React, { useState } from 'react';
import { LoginButton, LogoutButton } from './components/AuthButtons';

export default function Home() {
	const session = useSession();

	const [role, setRole] = useState('');
	const [selectedNumber, setSelectedNumber] = useState<number | undefined>(
		undefined
	);
	const [autoFilled, setAutoFilled] = useState('');
	const side =
		selectedNumber === undefined
			? undefined
			: selectedNumber % 2 === 0
			? 'Blue side'
			: 'redSide';

	const handleRoleChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setRole(e.target.value);
	};

	const handleNumberChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setSelectedNumber(parseInt(e.target.value));
	};

	const handleAutoFilledChange = (e: React.ChangeEvent<HTMLInputElement>) => {
		setAutoFilled(e.target.value);
	};

	const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
		event.preventDefault();
		const formData = new FormData(event.target as HTMLFormElement);
		const data = {
			role: formData.get('role'),
			selectedNumber: formData.get('selectedNumber'),
			autoFilled: formData.get('autoFilled'),
			side,
		};

		const response = await fetch('/api/submit', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
			},
			body: JSON.stringify(data),
		});

		if (response.ok) {
			console.log('Form submitted successfully');
		} else {
			console.error('Form submission failed');
		}
	};

	return (
		<main className='flex min-h-screen flex-col items-center justify-around p-24'>
			<div className='z-10 w-full max-w-5xl flex items-center justify-around font-mono text-sm lg:flex'>
				<div className='mx-auto max-w-screen-xl px-4 py-16 sm:px-6 lg:px-8'>
					{session?.data?.user ? (
						<div className='flex justify-center'>
							<div>Logged in as {session.data?.user?.email}</div>
							<LogoutButton />
						</div>
					) : (
						<div className='flex justify-center'>
							<div>You are not connected </div>
							<LoginButton />
						</div>
					)}
					<form onSubmit={handleSubmit} className='space-y-6'>
						<div>
							<label className='block text-sm font-medium text-gray-700'>
								Role
							</label>
							<div className='relative flex gap-3'>
								{['Toplaner', 'Jungler', 'Midlaner', 'ADCarry', 'Support'].map(
									(option) => (
										<label key={option} className='inline-flex items-center'>
											<input
												type='radio'
												name='role'
												value={option}
												checked={role === option}
												onChange={handleRoleChange}
												className='form-radio'
											/>
											<span className='ml-2'>{option}</span>
										</label>
									)
								)}
							</div>
						</div>

						<div>
							<label className='block text-sm font-medium ml-2 text-gray-700'>
								Selected Number
							</label>
							<div className='relative flex gap-3'>
								{[0, 1, 2, 3, 4, 5].map((number) => (
									<label key={number} className='inline-flex items-center'>
										<input
											type='radio'
											name='selectedNumber'
											value={number}
											checked={selectedNumber === number}
											onChange={handleNumberChange}
											className='form-radio'
										/>
										<span className='ml-2'>{number}</span>
									</label>
								))}
							</div>
						</div>

						<div>
							<label className='block text-sm font-medium text-gray-700'>
								Auto-filled
							</label>
							<div className='relative flex gap-3'>
								{['oui', 'non'].map((option) => (
									<label key={option} className='inline-flex items-center'>
										<input
											type='radio'
											name='autoFilled'
											value={option}
											checked={autoFilled === option}
											onChange={handleAutoFilledChange}
											className='form-radio'
										/>
										<span className='ml-2'>{option}</span>
									</label>
								))}
							</div>
						</div>

						<button
							type='submit'
							className='mt-4 px-4 py-2 bg-blue-500 text-white rounded'>
							Submit
						</button>
					</form>

					{role && <div>Role: {role}</div>}
					{selectedNumber && <div>Selected number: {selectedNumber}</div>}
					{autoFilled && <div>Auto-filled: {autoFilled}</div>}
					{side && <div>Side: {side}</div>}
				</div>
			</div>
		</main>
	);
}